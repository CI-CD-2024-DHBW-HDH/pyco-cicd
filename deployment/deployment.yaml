apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-02-29T12:25:00Z"
    generation: 5
    labels:
      app: my-deployment
    name: my-deployment
    namespace: default
    resourceVersion: "7071"
    uid: 588abfe9-2aef-4876-bc19-0b6307fc47b9
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: my-deployment
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: my-deployment
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2024-02-29T12:25:00Z"
      lastUpdateTime: "2024-02-29T12:41:55Z"
      message: ReplicaSet "my-deployment-56b68d6d48" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-29T13:07:31Z"
      lastUpdateTime: "2024-02-29T13:07:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-02-29T14:03:46Z"
    generation: 2
    labels:
      app: pyco-cicd
    name: pyco-cicd
    namespace: default
    resourceVersion: "12703"
    uid: 5267fa5d-505d-4343-841e-ca56b95d3d28
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pyco-cicd
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pyco-cicd
      spec:
        containers:
        - image: ghcr.io/ci-cd-2024-dhbw-hdh/pyco-cicd:latest
          imagePullPolicy: Always
          name: pyco-cicd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-02-29T14:32:25Z"
      lastUpdateTime: "2024-02-29T14:32:25Z"
      message: ReplicaSet "pyco-cicd-79d84c676" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-29T14:32:34Z"
      lastUpdateTime: "2024-02-29T14:32:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""